:root {
  /* -- SETTINGS -- */

  /* -- Board Settings -- */
  --board-desktop-width: 80vmin;
  --board-mobile-width: 95vmin;
  --cols-desktop: 8;
  --cols-mobile: 6;
  --column-gap: .5vmin;
  --row-gap: 1.5vmin;
  --board-padding-horizontal: 2vmin;
  --board-padding-b: 1vmin;

  /* -- Card Settings -- */
  --card-padding: 0.6vmin;
  --card-padding-top: 0.8vmin;
  --card-padding-bottom: 2vmin;
  --card-border-radius: .4vmin;
  --slot-inset: .5vmin;

  /* -- DYNAMIC DIMENSIONS (EDIT ON YOUR OWN RISK ðŸ‘») -- */
  /* -- Generals -- */
  --column-gaps-width: calc(var(--column-gap) * (var(--cols) - 1));
  --board-total-padding-horizontal: calc(var(--board-padding-horizontal) * 2);
  --board-whitespace-h: calc(var(--column-gaps-width) + var(--board-total-padding-horizontal));
  --card-padding-h: calc(var(--card-padding) * 2);
  --card-whitespace-h: calc(var(--card-padding-h) + var(--slot-inset));
  --slot-width: calc((var(--board-width) - var(--board-whitespace-h)) / var(--cols));
  --control: var(--board-total-padding-horizontal);

  /* -- Card Dimensions -- */
  /* --card-width: 6.525vmin; */
  --card-holder-width: calc(var(--slot-width) - var(--slot-inset));
  --card-width: calc(var(--slot-width) - var(--card-whitespace-h));
  --card-width: calc(var(--card-holder-width) - var(--card-padding-h));
  --card-height: calc(var(--card-width) * 1.5);
  --cards: 24;
}

/* -- Colors -- */
:root {
  --btn-rematch-background: #ffdd40;
}

/* -- GLOBAL AND MOBILE STYLES -- */
:root {
  --cols: var(--cols-mobile);
  --board-width: var(--board-mobile-width);
}

body {
  background-color: #122329;
  font-family: 'Avenir', sans-serif;
  margin: 0;
}

.container {
  position: fixed;
  width: 100vw;
  z-index: 2;
}

.board {
  box-sizing: border-box;
  width: var(--board-width);
  padding: var(--board-padding-horizontal);
  background: linear-gradient(45deg, rgba(246, 80, 48, 1) 0%, rgba(246, 80, 48, 1) 45%, rgba(254, 107, 72, 1));
  border-radius: calc(var(--board-width) / 100);
  margin: 2vmin auto;
}

.slots {
  display: grid;
  grid-template-columns: repeat(var(--cols), auto);
  grid-column-gap: var(--column-gap);
  grid-row-gap: var(--row-gap);
  width: 100%;
  height: 100%;
}

.slot {
  border-radius: var(--card-border-radius);
  background-color: rgba(236, 74, 37, 0.8);
  box-shadow: inset 0px 0.8vmin 0.8vmin rgba(77, 18, 18, 0.3), inset 0px -2px 5px rgba(148, 5, 5, 0.15), 0px 2px 2px rgba(255, 212, 170, 0.15);
}

.footer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--board-padding-b) 0;
}

.title {
  font-size: 0.8rem;
  line-height: 1;
  color: #ac2e0f;
  text-shadow: 0px 1px 1px rgba(255, 255, 255, 0.4);
}

.subtitle {
  font-weight: normal;
  display: block;
}

.btn {
  &--rematch {
    background: linear-gradient(#fffc00, #fc9010);
    background: linear-gradient(179deg, #d64646 49.16%, #c82c07 88.24%);
    color: #bf3a20;
    border: 0;
    border-radius: 5px;
    cursor: pointer;
    text-transform: uppercase;
    letter-spacing: 0.08em;
    position: relative;
    transition: all 0.3s;
    padding: 0;
    font-size: 0.75rem;
    font-weight: bold;
    min-height: 0;
    user-select: none;
    font-family: 'Avenir', sans-serif;
  }

  &--rematch-front {
    display: block;
    padding: 0.5vmin 1vmin;
    margin: 0;
    background: linear-gradient(rgb(254, 252, 245) 4.2%, #ffd40c 6.72%, #fcaa0f);
    border-radius: inherit;
    color: #bf3a20;
  }

  &--rematch:hover &--rematch-front {
    background-color: darken(var(--btn-rematch-background), 10);
  }
}

.card {
  box-sizing: border-box;
  display: block;
  cursor: pointer;
  margin: calc(var(--slot-inset) / 1.5);
  border-radius: var(--card-border-radius);
  background-color: #fff;
  backface-visibility: visible;
  position: relative;
  width: calc(100% - var(--slot-inset));
  transform-origin: bottom center;
  transition: all 0.3s;
}

.card__front {
  padding: var(--card-padding);
  padding-bottom: var(--card-padding-bottom);
  padding-top: var(--card-padding-top);
}

.control {
  position: absolute;
  opacity: 0;
}

.control:checked ~ .card {
  transform: rotateY(180deg) translate3d(0, -1px, 0vmin);
  box-shadow: none;
}

.control:checked ~ .card::before {
  opacity: 1;
}

.control:checked ~ .card .card__front::after {
  opacity: 0;
}
